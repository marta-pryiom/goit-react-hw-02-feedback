{"version":3,"sources":["components/Feedback.module.css","components/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","Feedback","Title","FeedbackOptions","options","onLeaveFeedback","BtnBox","map","option","type","Btn","onClick","Statistics","total","positivePercentage","good","neutral","bad","FeedbackInfoItems","Item","App","state","e","currentEl","target","value","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","allReviews","positivePersent","Math","ceil","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,OAAS,yBAAyB,IAAM,sBAAsB,aAAe,+BAA+B,kBAAoB,oCAAoC,KAAO,yB,0KCE5P,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,sBAAKC,UAAWC,IAAEC,SAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,SAAyBL,IACxBC,KAIA,SAASK,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,qBAAKN,UAAWC,IAAEM,OAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLV,UAAWC,IAAEU,IACbC,QAASN,EAJX,SAMGG,GALIA,QAWR,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,mBAAoBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,IACrE,OACE,8BACE,qBAAIlB,UAAWC,IAAEkB,kBAAjB,UACE,oBAAInB,UAAWC,IAAEmB,KAAjB,SACE,wCAAWJ,OAEb,oBAAIhB,UAAWC,IAAEmB,KAAjB,SACE,2CAAcH,OAEhB,oBAAIjB,UAAWC,IAAEmB,KAAjB,SACE,uCAAUF,OAEZ,oBAAIlB,UAAWC,IAAEmB,KAAjB,SACE,yCAAYN,OAEd,oBAAId,UAAWC,IAAEmB,KAAjB,SACE,qDAAwBL,EAAxB,e,ICvCJM,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPZ,gBAAkB,SAAAiB,GAChB,IAAMC,EAAYD,EAAEE,OAAOC,MAC3B,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFJ,GADL,kBAEGA,EAAYI,EAAKJ,GAAa,Q,EAIrCK,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQN,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBY,gCAAkC,WAChC,IAAMC,EAAa,EAAKF,qBAClBG,EAAkB,EAAKV,MAAMN,KACnC,OAAO,EAAKM,MAAMN,KACdiB,KAAKC,KAAMF,EAAkBD,EAAc,KAC3C,G,4CAEN,WACE,MAA+BI,KAAKb,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAGrBZ,EAGE6B,KAHF7B,gBACAuB,EAEEM,KAFFN,mBACAC,EACEK,KADFL,gCAEF,OACE,gCACE,cAACjC,EAAD,CAASC,MAAM,wBAAf,SACE,cAACM,EAAD,CACEC,QAVY,CAAC,OAAQ,UAAW,OAWhCC,gBAAiBA,MAGrB,cAACT,EAAD,CAASC,MAAM,aAAf,SACE,cAACe,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,MAAOe,IACPd,mBAAoBe,e,GAjDdM,aAyDHf,IClDAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3cc6e6e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback\":\"Feedback_Feedback__1NoHX\",\"Title\":\"Feedback_Title__HxDxR\",\"BtnBox\":\"Feedback_BtnBox__3BCm5\",\"Btn\":\"Feedback_Btn__2MhGP\",\"FeedbackInfo\":\"Feedback_FeedbackInfo__2UnAL\",\"FeedbackInfoItems\":\"Feedback_FeedbackInfoItems__1x66O\",\"Item\":\"Feedback_Item__3KQcr\"};","// import { Component } from 'react';\r\nimport s from './Feedback.module.css';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className={s.Feedback}>\r\n      <h1 className={s.Title}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.BtnBox}>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          className={s.Btn}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport function Statistics({ total, positivePercentage, good, neutral, bad }) {\r\n  return (\r\n    <div>\r\n      <ul className={s.FeedbackInfoItems}>\r\n        <li className={s.Item}>\r\n          <p>Good : {good}</p>\r\n        </li>\r\n        <li className={s.Item}>\r\n          <p>Neutral : {neutral}</p>\r\n        </li>\r\n        <li className={s.Item}>\r\n          <p>Bad : {bad}</p>\r\n        </li>\r\n        <li className={s.Item}>\r\n          <p>Total : {total}</p>\r\n        </li>\r\n        <li className={s.Item}>\r\n          <p>Positive feedback : {positivePercentage} %</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport { Statistics } from './components/Feedback';\nimport { FeedbackOptions } from './components/Feedback';\nimport { Section } from './components/Feedback';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = e => {\n    const currentEl = e.target.value;\n    this.setState(prev => {\n      return {\n        ...currentEl,\n        [currentEl]: prev[currentEl] + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const allReviews = this.countTotalFeedback();\n    const positivePersent = this.state.good;\n    return this.state.good\n      ? Math.ceil((positivePersent / allReviews) * 100)\n      : 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const optionValue = ['good', 'neutral', 'bad'];\n    const {\n      onLeaveFeedback,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={optionValue}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}